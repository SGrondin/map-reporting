// Generated by CoffeeScript 1.6.3
(function() {
  var Node, mapUtils;

  mapUtils = require("./mapUtils");

  Node = (require("./Node")).Node;

  exports.SVG = (function() {
    function SVG(config, zones) {
      this.head = new Node(null, "svg");
      this.head.setAttributes({
        "class": "mapReporting",
        version: "1.1",
        baseProfile: "full",
        xmlns: "http://www.w3.org/2000/svg",
        "xmlns:xlink": "http://www.w3.org/1999/xlink",
        id: "mapReporting" + mapUtils.hash(JSON.stringify(config) + JSON.stringify(zones)) + "_" + Math.round(Math.random() * 99999999)
      });
      this.defs = new Node(this.head, "defs");
      this.script = new Node(this.head, "script");
      this.script.setAttributes({
        "type": "text/javascript"
      });
      this.style = new Node(this.head, "style");
      this.style.setAttributes({
        type: "text/css"
      });
    }

    SVG.prototype.addDef = function(def, id) {
      def.setAttributes({
        "id": "f" + id
      });
      def.setParent(this.defs);
      return "f" + id;
    };

    SVG.prototype.setEmbeddedJS = function(js) {
      this.script.setCDATA(js);
      return this;
    };

    SVG.prototype.setEmbeddedCSS = function(defaultCSS, styling) {
      this.style.setCDATA(defaultCSS + "\n" + (mapUtils.buildCSS(styling, this.head.attributes.id)));
      return this;
    };

    SVG.prototype._addChild = function(obj) {
      this.head._addChild(obj);
      return this;
    };

    SVG.prototype.setAttributes = function(obj) {
      var k, v;
      for (k in obj) {
        v = obj[k];
        this.head.attributes[k] = v;
      }
      return this;
    };

    SVG.prototype.toString = function() {
      return "<?xml version=\"1.0\" standalone=\"no\"?>\n" + this.head.toString(0);
    };

    SVG.prototype.toDOM = function(refOrID) {
      var container;
      container = typeof refOrID === "string" ? document.getElementById(refOrID) : refOrID;
      this.head.toDOM(container);
      return this;
    };

    return SVG;

  })();

}).call(this);
