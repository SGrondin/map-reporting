// Generated by CoffeeScript 1.7.1
(function() {
  var lagrange, lpad,
    __hasProp = {}.hasOwnProperty;

  exports.hash = function(str) {
    return (str.split("").reduce((function(a, b) {
      a = ((a << 5) - a) + b.charCodeAt(0);
      return a & a;
    }), 0)) >>> 0;
  };

  exports.strRepeat = function(str, nb) {
    return new Array(nb + 1).join(str);
  };

  lpad = function(str, pad, len) {
    return (str.length < len ? exports.strRepeat(pad, len - str.length) : "") + str;
  };

  exports.toHTML = function(str) {
    return str.replace(/&/g, '&amp;').replace(/"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
  };

  lagrange = function(val, a, b, c, d, e, f) {
    return (a * Math.pow(val, 4) + b * Math.pow(val, 3) + c * Math.pow(val, 2) + d * val + e) / f;
  };

  exports.getColor = function(val, color, invert) {
    var b, g, r;
    if (invert == null) {
      invert = false;
    }
    if (invert) {
      val = 100 - val;
    }
    color = color.toLowerCase();
    if (color === "blue") {
      r = lagrange(val, -57, 12350, -729375, -5093750, 1350000000, 9375000);
      g = lagrange(val, -31, 6790, -457625, 6481250, 403125000, 1875000);
      b = lagrange(val, -13, 3190, -240875, 4156250, 440625000, 1875000);
    } else if (color === "red") {
      r = lagrange(val, 19, -4950, 295625, -7593750, 2390625000, 9375000);
      g = lagrange(val, 23, -3350, 173125, -18343750, 1546875000, 9375000);
      b = lagrange(val, -33, 7250, -474375, 343750, 1125000000, 9375000);
    } else if (color === "green") {
      r = lagrange(val, 23, -3850, 203125, -13906250, 1471875000, 9375000);
      g = lagrange(val, 7, -1200, 59375, -4218750, 914062500, 4687500);
      b = lagrange(val, 7, -1230, 66125, -3543750, 277500000, 1875000);
    }
    return "#" + lpad(Math.round(r).toString(16), "0", 2) + lpad(Math.round(g).toString(16), "0", 2) + lpad(Math.round(b).toString(16), "0", 2);
  };

  exports.buildCSS = function(styling, id) {
    var container, css, k, selector, style, v;
    container = "#" + id;
    if (styling != null) {
      css = (function() {
        var _results;
        _results = [];
        for (selector in styling) {
          if (!__hasProp.call(styling, selector)) continue;
          style = styling[selector];
          _results.push(container + " " + selector + " {\n" + ((function() {
            var _results1;
            _results1 = [];
            for (k in style) {
              if (!__hasProp.call(style, k)) continue;
              v = style[k];
              _results1.push("\t" + k + " : " + v + ";");
            }
            return _results1;
          })()).join("\n") + "\n}\n");
        }
        return _results;
      })();
      return css.join("\n");
    } else {
      return "";
    }
  };

}).call(this);
